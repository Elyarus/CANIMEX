{"version":3,"sources":["get_modificar_delete_animes.js"],"names":["document","addEventListener","options","method","headers","fetch","response","ok","Error","status","json","data","console","log","animes","tbody","getElementById","forEach","anime","tr","createElement","idAnime","textContent","tdTitle","titulo","tdGenres","genero","tdDuration","duracion","tdImage","img","src","imagen","width","alt","classList","add","tdAcciones","btnEliminar","btnModificar","appendChild","error","querySelectorAll","button","event","target","row","closest","animeId","querySelector","innerText","trim","animeUnico","value","alert","location","reload"],"mappings":"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","sourcesContent":["document.addEventListener('DOMContentLoaded', async () => {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:8080/api/animes', options);\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log(data);\r\n\r\n        const animes = data;\r\n        const tbody = document.getElementById('bodyTableAnimes');\r\n        \r\n        animes.forEach(anime => {\r\n            const tr = document.createElement('tr');\r\n            const idAnime = document.createElement('td')\r\n            idAnime.textContent = anime.idAnime;\r\n            const tdTitle = document.createElement('td');\r\n            tdTitle.textContent = anime.titulo;\r\n            const tdGenres = document.createElement('td');\r\n            tdGenres.textContent = anime.genero;\r\n            const tdDuration = document.createElement('td');\r\n            tdDuration.textContent = anime.duracion;\r\n            const tdImage = document.createElement('td');\r\n            const img = document.createElement('img');\r\n            img.src = \"../assets/img/\" + anime.imagen;\r\n            img.width = 150;\r\n            img.alt = anime.titulo;\r\n            img.classList.add('img-fluid', 'img-thumbnail');\r\n            const tdAcciones = document.createElement('td');\r\n            const btnEliminar = document.createElement('button');\r\n            btnEliminar.textContent = 'Eliminar';\r\n            btnEliminar.classList.add('btnEliminar');\r\n            const btnModificar = document.createElement('button');\r\n            btnModificar.textContent = 'Modificar';\r\n            btnModificar.classList.add('btnModificar');\r\n            tdAcciones.appendChild(btnEliminar);\r\n            tdAcciones.appendChild(btnModificar);\r\n            tdImage.appendChild(img);\r\n            tr.appendChild(idAnime);\r\n            tr.appendChild(tdTitle);\r\n            tr.appendChild(tdDuration);\r\n            tr.appendChild(tdGenres);\r\n            tr.appendChild(tdImage);\r\n            tr.appendChild(tdAcciones);\r\n            tbody.appendChild(tr);\r\n        });\r\n    } catch (error) {\r\n        console.error('Error fetching animes:', error);\r\n    }\r\n    console.log(document.querySelectorAll('.btnModificar'));\r\n    // agregar eventos despues de crear los botones\r\n    document.querySelectorAll('.btnModificar').forEach(button => {\r\n        button.addEventListener('click', async (event) => {\r\n            console.log(\"hizo click\");\r\n            console.log(event);\r\n            console.log(event.target); // etiqueda de html del button que presiono\r\n            const row = event.target.closest('tr');\r\n            console.log(row);\r\n            const animeId = row.querySelector('td:first-child').innerText.trim(); //de la fila levanta el id del anime por su clase, por un selector hijo primero\r\n\r\n            try {\r\n                const response = await fetch(`http://localhost:8080/api/animes?id=${animeId}`);\r\n                    if(!response.ok){\r\n                        // lanzo una excepcion en caso de que no funcione el fetch, esto se ve en la consola\r\n                        throw new Error('Error al obtener los datos del anime');\r\n                    }\r\n                const data = await response.json();\r\n                const animeUnico = data[0];\r\n                console.log(data);\r\n                // son los id del formulario, como son unicos e irrepetibles dentro del html sabe a quien insertarles los valores\r\n                document.getElementById('id').value = animeUnico.idAnime;\r\n                document.getElementById('titulo').value = animeUnico.titulo;\r\n                document.getElementById('genero').value = animeUnico.genero;\r\n                document.getElementById('duracion').value = animeUnico.duracion;\r\n            } catch (error) {\r\n                console.error('Erorr:', error);\r\n            }\r\n        });\r\n    });\r\n    // evento para eliminar\r\n    document.querySelectorAll('.btnEliminar').forEach(button => {\r\n        button.addEventListener('click', async (event) => {\r\n            const row = event.target.closest('tr');\r\n            const animeId = row.querySelector('td:first-child').innerText.trim();\r\n            try{\r\n                const response = await fetch(`http://localhost:8080/api/animes?id=${animeId}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                if (!response.ok) {\r\n                    alert('Error al eliminar el anime');\r\n                    throw new Error('Error al eliminar el anime');\r\n                }\r\n                const data = await response.json();\r\n                // si da ok muestro alerta que se elimino bien\r\n\r\n                alert('Anime eliminado correctamente');\r\n                console.log(data);\r\n                location.reload(); // recargo la pagina\r\n                \r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        })\r\n    })\r\n});\r\n"],"file":"get_modificar_delete_animes.dev.js"}