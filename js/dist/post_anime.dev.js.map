{"version":3,"sources":["post_anime.js"],"names":["document","addEventListener","formNuevoAnime","getElementById","event","preventDefault","formData","FormData","titulo","get","genero","duracion","imagen","alert","imageName","name","options","method","headers","body","JSON","stringify","fetch","response","json","data","status","reset","location","reload"],"mappings":";;AAAA;AACAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C;AAAA;AAAA;AAAA;AAAA;AAC1C;AACA;AACA;AACA;AACA;AACAC,UAAAA,cAAc,GAAGF,QAAQ,CAACG,cAAT,CAAwB,gBAAxB,CAAjB,CAN0C,CAO1C;;AACAD,UAAAA,cAAc,CAACD,gBAAf,CAAgC,QAAhC,EAA0C,iBAAOG,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtC;AACAA,oBAAAA,KAAK,CAACC,cAAN,GAFsC,CAGtC;;AACMC,oBAAAA,QAJgC,GAIrB,IAAIC,QAAJ,CAAaL,cAAb,CAJqB,EAKtC;;AACMM,oBAAAA,MANgC,GAMvBF,QAAQ,CAACG,GAAT,CAAa,QAAb,CANuB;AAOhCC,oBAAAA,MAPgC,GAOvBJ,QAAQ,CAACG,GAAT,CAAa,QAAb,CAPuB;AAQhCE,oBAAAA,QARgC,GAQrBL,QAAQ,CAACG,GAAT,CAAa,UAAb,CARqB;AAShCG,oBAAAA,MATgC,GASvBN,QAAQ,CAACG,GAAT,CAAa,QAAb,CATuB,EAUtC;;AAVsC,0BAWlCD,MAAM,KAAK,EAAX,IAAiBE,MAAM,KAAK,EAA5B,IAAkCC,QAAQ,KAAK,EAA/C,IAAqDC,MAAM,KAAK,EAX9B;AAAA;AAAA;AAAA;;AAYlCC,oBAAAA,KAAK,CAAC,mCAAD,CAAL;AAZkC;;AAAA;AAetC;AACMC,oBAAAA,SAhBgC,GAgBpBF,MAAM,CAACG,IAhBa,EAiBtC;;AACMC,oBAAAA,OAlBgC,GAkBtB;AACZC,sBAAAA,MAAM,EAAE,MADI;AAEZC,sBAAAA,OAAO,EAAE;AACL,wCAAgB;AADX,uBAFG;AAKZC,sBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBb,wBAAAA,MAAM,EAAEA,MADS;AAEjBE,wBAAAA,MAAM,EAAEA,MAFS;AAGjBC,wBAAAA,QAAQ,EAAEA,QAHO;AAIjBC,wBAAAA,MAAM,EAAEE;AAJS,uBAAf;AALM,qBAlBsB,EA8BtC;;AA9BsC;AAAA,oDA+BfQ,KAAK,CAAC,kCAAD,EAAqCN,OAArC,CA/BU;;AAAA;AA+BhCO,oBAAAA,QA/BgC;AAAA;AAAA,oDAiCnBA,QAAQ,CAACC,IAAT,EAjCmB;;AAAA;AAiChCC,oBAAAA,IAjCgC;;AAkCtC;AACA;AACA,wBAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzBb,sBAAAA,KAAK,CAAC,8BAAD,CAAL;AACAX,sBAAAA,cAAc,CAACyB,KAAf,GAFyB,CAGzB;;AACAC,sBAAAA,QAAQ,CAACC,MAAT;AACH,qBALD,MAKO;AACHhB,sBAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;;AA3CqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA1C;;AAR0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9C","sourcesContent":["// cuando el dom se cargue\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n    // tengo que levantar los datos del formulario, validar los inputs, en caso de algun value vacio, mostrar un mensaje de error\r\n    // y no hacer la peticion fetch\r\n    // si los datos son correctos, realizo la peticion fetch post a la api para agregar una pelicula\r\n    // si la respuesta es correcta, muestro un mensaje de exito y limpio los inputs del formulario\r\n    //obtengo el formulario\r\n    formNuevoAnime = document.getElementById('formNuevoAnime');\r\n    //agrego el evento submit al formulario\r\n    formNuevoAnime.addEventListener('submit', async (event) => {\r\n        //prevengo el comportamiento por defecto del formulario\r\n        event.preventDefault();\r\n        //obtengo los datos del formulario\r\n        const formData = new FormData(formNuevoAnime);\r\n        //obtengo los valores de los inputs\r\n        const titulo = formData.get('titulo');\r\n        const genero = formData.get('genero');\r\n        const duracion = formData.get('duracion');\r\n        const imagen = formData.get('imagen');\r\n        //valido los inputs\r\n        if (titulo === '' || genero === '' || duracion === '' || imagen === '') {\r\n            alert('Todos los campos son obligatorios');\r\n            return;\r\n        }\r\n        // levanto solo el nombre del file para enviarlo a la api\r\n        const imageName = imagen.name;\r\n        //configuracion de options, es un post y necesita body\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                titulo: titulo,\r\n                genero: genero,\r\n                duracion: duracion,\r\n                imagen: imageName\r\n            })\r\n        };\r\n        //realizo la peticion fetch a la api para agregar una pelicula\r\n        const response = await fetch('http://localhost:8080/api/animes', options);\r\n        //obtengo la respuesta\r\n        const data = await response.json();\r\n        //si la respuesta es correcta, muestro un mensaje de exito y limpio los inputs del formulario\r\n        // si el codigo es 201, la pelicula se agrego correctamente\r\n        if (response.status === 201) {\r\n            alert('Anime agregada correctamente');\r\n            formNuevoAnime.reset();\r\n            // que se recargue la pagina para ver la pelicula agregada\r\n            location.reload();\r\n        } else {\r\n            alert('Error al agregar el anime');\r\n        }\r\n    });\r\n\r\n});"],"file":"post_anime.dev.js"}